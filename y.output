Nonterminals useless in grammar

   Mult_Expr


Terminals unused in grammar

   TRUE
   FALSE


State 55 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Function Program
    2        | %empty

    3 $@1: %empty

    4 $@2: %empty

    5 $@3: %empty

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    7 Dec_colon: Declaration SEMICOLON Dec_colon
    8          | %empty

    9 Declaration: IDENT COLON Array INTEGER

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   11      | %empty

   12 $@4: %empty

   13 $@5: %empty

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON $@5 Statement1

   15 $@6: %empty

   16 $@7: %empty

   17 Statement: Var_arr $@6 ASSIGN Expression SEMICOLON $@7 Statement1
   18          | IF Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON Statement1
   19          | WHILE Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON Statement1
   20          | DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

   21 $@8: %empty

   22 $@9: %empty

   23 Statement: READ Var $@8 SEMICOLON $@9 Statement1

   24 $@10: %empty

   25 $@11: %empty

   26 Statement: WRITE Var $@10 SEMICOLON $@11 Statement1

   27 $@12: %empty

   28 Statement: READ Var_arr SEMICOLON $@12 Statement1

   29 $@13: %empty

   30 Statement: WRITE Var_arr SEMICOLON $@13 Statement1

   31 $@14: %empty

   32 Statement: CONTINUE SEMICOLON $@14 Statement1

   33 $@15: %empty

   34 Statement: BREAK SEMICOLON $@15 Statement1

   35 $@16: %empty

   36 Statement: RETURN Expression SEMICOLON $@16 Statement1

   37 Statement1: Statement
   38           | %empty

   39 Else_statement: ELSE Statement
   40               | %empty

   41 Bool_Exp: Not Expression Comp Expression

   42 Not: NOT
   43    | %empty

   44 Comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE
   50     | %empty

   51 Expression: Multi_Exp Add_Op

   52 $@17: %empty

   53 Add_Op: ADD $@17 Expression

   54 $@18: %empty

   55 Add_Op: MINUS $@18 Expression
   56       | %empty

   57 Multi_Exp: Term Mult_Op

   58 $@19: %empty

   59 Mult_Op: MULT $@19 Multi_Exp

   60 $@20: %empty

   61 Mult_Op: DIV $@20 Multi_Exp

   62 $@21: %empty

   63 Mult_Op: MOD $@21 Multi_Exp
   64        | %empty

   65 Term: Var
   66     | Var_arr
   67     | NUMBER

   68 $@22: %empty

   69 $@23: %empty

   70 Term: L_PAREN $@22 Expression $@23 R_PAREN
   71     | IDENT L_PAREN Term_Exp R_PAREN

   72 Term_Exp: Expression

   73 $@24: %empty

   74 Term_Exp: Expression COMMA $@24 Term_Exp
   75         | %empty

   76 Var: IDENT

   77 $@25: %empty

   78 $@26: %empty

   79 Var_arr: IDENT $@25 L_SQUARE_BRACKET Expression $@26 R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 10 67
IDENT (259) 6 9 71 76 79
FUNCTION (260) 6
BEGIN_PARAMS (261) 6
END_PARAMS (262) 6
BEGIN_LOCALS (263) 6
END_LOCALS (264) 6
BEGIN_BODY (265) 6
END_BODY (266) 6
INTEGER (267) 9
ARRAY (268) 10
OF (269) 10
IF (270) 18
THEN (271) 18
ENDIF (272) 18
ELSE (273) 39
WHILE (274) 19 20
DO (275) 20
BEGINLOOP (276) 19 20
ENDLOOP (277) 19 20
CONTINUE (278) 32
BREAK (279) 34
READ (280) 23 28
WRITE (281) 26 30
NOT (282) 42
TRUE (283)
FALSE (284)
RETURN (285) 36
MINUS (286) 55
ADD (287) 53
MULT (288) 59
DIV (289) 61
MOD (290) 63
EQ (291) 44
NEQ (292) 45
LT (293) 46
GT (294) 47
LTE (295) 48
GTE (296) 49
SEMICOLON (297) 6 7 14 17 18 19 20 23 26 28 30 32 34 36
COLON (298) 9
COMMA (299) 74
L_PAREN (300) 70 71
R_PAREN (301) 70 71
L_SQUARE_BRACKET (302) 10 79
R_SQUARE_BRACKET (303) 10 79
ASSIGN (304) 14 17


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1 2, on right: 0 1
Function (52)
    on left: 6, on right: 1
$@1 (53)
    on left: 3, on right: 6
$@2 (54)
    on left: 4, on right: 6
$@3 (55)
    on left: 5, on right: 6
Dec_colon (56)
    on left: 7 8, on right: 6 7
Declaration (57)
    on left: 9, on right: 7
Array (58)
    on left: 10 11, on right: 9
Statement (59)
    on left: 14 17 18 19 20 23 26 28 30 32 34 36, on right: 6 18 19
    20 37 39
$@4 (60)
    on left: 12, on right: 14
$@5 (61)
    on left: 13, on right: 14
$@6 (62)
    on left: 15, on right: 17
$@7 (63)
    on left: 16, on right: 17
$@8 (64)
    on left: 21, on right: 23
$@9 (65)
    on left: 22, on right: 23
$@10 (66)
    on left: 24, on right: 26
$@11 (67)
    on left: 25, on right: 26
$@12 (68)
    on left: 27, on right: 28
$@13 (69)
    on left: 29, on right: 30
$@14 (70)
    on left: 31, on right: 32
$@15 (71)
    on left: 33, on right: 34
$@16 (72)
    on left: 35, on right: 36
Statement1 (73)
    on left: 37 38, on right: 14 17 18 19 20 23 26 28 30 32 34 36
Else_statement (74)
    on left: 39 40, on right: 18
Bool_Exp (75)
    on left: 41, on right: 18 19 20
Not (76)
    on left: 42 43, on right: 41
Comp (77)
    on left: 44 45 46 47 48 49 50, on right: 41
Expression (78)
    on left: 51, on right: 14 17 36 41 53 55 70 72 74 79
Add_Op (79)
    on left: 53 55 56, on right: 51
$@17 (80)
    on left: 52, on right: 53
$@18 (81)
    on left: 54, on right: 55
Multi_Exp (82)
    on left: 57, on right: 51 59 61 63
Mult_Op (83)
    on left: 59 61 63 64, on right: 57
$@19 (84)
    on left: 58, on right: 59
$@20 (85)
    on left: 60, on right: 61
$@21 (86)
    on left: 62, on right: 63
Term (87)
    on left: 65 66 67 70 71, on right: 57
$@22 (88)
    on left: 68, on right: 70
$@23 (89)
    on left: 69, on right: 70
Term_Exp (90)
    on left: 72 74 75, on right: 71 74
$@24 (91)
    on left: 73, on right: 74
Var (92)
    on left: 76, on right: 14 23 26 65
Var_arr (93)
    on left: 79, on right: 17 28 30 66
$@25 (94)
    on left: 77, on right: 79
$@26 (95)
    on left: 78, on right: 79


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    6 Function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 6
    Function  go to state 3


State 4

    6 Function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    $default  reduce using rule 3 ($@1)

    $@1  go to state 7


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    1 Program: Function Program .

    $default  reduce using rule 1 (Program)


State 7

    6 Function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    SEMICOLON  shift, and go to state 8


State 8

    6 Function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (Dec_colon)

    Dec_colon    go to state 11
    Declaration  go to state 12


State 10

    9 Declaration: IDENT . COLON Array INTEGER

    COLON  shift, and go to state 13


State 11

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon . $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    $default  reduce using rule 4 ($@2)

    $@2  go to state 14


State 12

    7 Dec_colon: Declaration . SEMICOLON Dec_colon

    SEMICOLON  shift, and go to state 15


State 13

    9 Declaration: IDENT COLON . Array INTEGER

    ARRAY  shift, and go to state 16

    $default  reduce using rule 11 (Array)

    Array  go to state 17


State 14

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 . END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    7 Dec_colon: Declaration SEMICOLON . Dec_colon

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (Dec_colon)

    Dec_colon    go to state 19
    Declaration  go to state 12


State 16

   10 Array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 20


State 17

    9 Declaration: IDENT COLON Array . INTEGER

    INTEGER  shift, and go to state 21


State 18

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS . BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    7 Dec_colon: Declaration SEMICOLON Dec_colon .

    $default  reduce using rule 7 (Dec_colon)


State 20

   10 Array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 23


State 21

    9 Declaration: IDENT COLON Array INTEGER .

    $default  reduce using rule 9 (Declaration)


State 22

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS . Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (Dec_colon)

    Dec_colon    go to state 24
    Declaration  go to state 12


State 23

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 25


State 24

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon . $@3 END_LOCALS BEGIN_BODY Statement END_BODY

    $default  reduce using rule 5 ($@3)

    $@3  go to state 26


State 25

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 27


State 26

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 . END_LOCALS BEGIN_BODY Statement END_BODY

    END_LOCALS  shift, and go to state 28


State 27

   10 Array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 10 (Array)


State 28

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS . BEGIN_BODY Statement END_BODY

    BEGIN_BODY  shift, and go to state 29


State 29

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY . Statement END_BODY

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 39
    Var        go to state 40
    Var_arr    go to state 41


State 30

   76 Var: IDENT .
   79 Var_arr: IDENT . $@25 L_SQUARE_BRACKET Expression $@26 R_SQUARE_BRACKET

    L_SQUARE_BRACKET  reduce using rule 77 ($@25)
    $default          reduce using rule 76 (Var)

    $@25  go to state 42


State 31

   18 Statement: IF . Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON Statement1

    NOT  shift, and go to state 43

    $default  reduce using rule 43 (Not)

    Bool_Exp  go to state 44
    Not       go to state 45


State 32

   19 Statement: WHILE . Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON Statement1

    NOT  shift, and go to state 43

    $default  reduce using rule 43 (Not)

    Bool_Exp  go to state 46
    Not       go to state 45


State 33

   20 Statement: DO . BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

    BEGINLOOP  shift, and go to state 47


State 34

   32 Statement: CONTINUE . SEMICOLON $@14 Statement1

    SEMICOLON  shift, and go to state 48


State 35

   34 Statement: BREAK . SEMICOLON $@15 Statement1

    SEMICOLON  shift, and go to state 49


State 36

   23 Statement: READ . Var $@8 SEMICOLON $@9 Statement1
   28          | READ . Var_arr SEMICOLON $@12 Statement1

    IDENT  shift, and go to state 30

    Var      go to state 50
    Var_arr  go to state 51


State 37

   26 Statement: WRITE . Var $@10 SEMICOLON $@11 Statement1
   30          | WRITE . Var_arr SEMICOLON $@13 Statement1

    IDENT  shift, and go to state 30

    Var      go to state 52
    Var_arr  go to state 53


State 38

   36 Statement: RETURN . Expression SEMICOLON $@16 Statement1

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 57
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 39

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement . END_BODY

    END_BODY  shift, and go to state 62


State 40

   14 Statement: Var . $@4 ASSIGN Expression SEMICOLON $@5 Statement1

    $default  reduce using rule 12 ($@4)

    $@4  go to state 63


State 41

   17 Statement: Var_arr . $@6 ASSIGN Expression SEMICOLON $@7 Statement1

    $default  reduce using rule 15 ($@6)

    $@6  go to state 64


State 42

   79 Var_arr: IDENT $@25 . L_SQUARE_BRACKET Expression $@26 R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65


State 43

   42 Not: NOT .

    $default  reduce using rule 42 (Not)


State 44

   18 Statement: IF Bool_Exp . THEN Statement Else_statement ENDIF SEMICOLON Statement1

    THEN  shift, and go to state 66


State 45

   41 Bool_Exp: Not . Expression Comp Expression

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 67
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 46

   19 Statement: WHILE Bool_Exp . BEGINLOOP Statement ENDLOOP SEMICOLON Statement1

    BEGINLOOP  shift, and go to state 68


State 47

   20 Statement: DO BEGINLOOP . Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 69
    Var        go to state 40
    Var_arr    go to state 41


State 48

   32 Statement: CONTINUE SEMICOLON . $@14 Statement1

    $default  reduce using rule 31 ($@14)

    $@14  go to state 70


State 49

   34 Statement: BREAK SEMICOLON . $@15 Statement1

    $default  reduce using rule 33 ($@15)

    $@15  go to state 71


State 50

   23 Statement: READ Var . $@8 SEMICOLON $@9 Statement1

    $default  reduce using rule 21 ($@8)

    $@8  go to state 72


State 51

   28 Statement: READ Var_arr . SEMICOLON $@12 Statement1

    SEMICOLON  shift, and go to state 73


State 52

   26 Statement: WRITE Var . $@10 SEMICOLON $@11 Statement1

    $default  reduce using rule 24 ($@10)

    $@10  go to state 74


State 53

   30 Statement: WRITE Var_arr . SEMICOLON $@13 Statement1

    SEMICOLON  shift, and go to state 75


State 54

   67 Term: NUMBER .

    $default  reduce using rule 67 (Term)


State 55

   71 Term: IDENT . L_PAREN Term_Exp R_PAREN
   76 Var: IDENT .
   79 Var_arr: IDENT . $@25 L_SQUARE_BRACKET Expression $@26 R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 76

    L_PAREN           [reduce using rule 76 (Var)]
    L_SQUARE_BRACKET  reduce using rule 77 ($@25)
    $default          reduce using rule 76 (Var)

    $@25  go to state 42


State 56

   70 Term: L_PAREN . $@22 Expression $@23 R_PAREN

    $default  reduce using rule 68 ($@22)

    $@22  go to state 77


State 57

   36 Statement: RETURN Expression . SEMICOLON $@16 Statement1

    SEMICOLON  shift, and go to state 78


State 58

   51 Expression: Multi_Exp . Add_Op

    MINUS  shift, and go to state 79
    ADD    shift, and go to state 80

    $default  reduce using rule 56 (Add_Op)

    Add_Op  go to state 81


State 59

   57 Multi_Exp: Term . Mult_Op

    MULT  shift, and go to state 82
    DIV   shift, and go to state 83
    MOD   shift, and go to state 84

    $default  reduce using rule 64 (Mult_Op)

    Mult_Op  go to state 85


State 60

   65 Term: Var .

    $default  reduce using rule 65 (Term)


State 61

   66 Term: Var_arr .

    $default  reduce using rule 66 (Term)


State 62

    6 Function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS Dec_colon $@2 END_PARAMS BEGIN_LOCALS Dec_colon $@3 END_LOCALS BEGIN_BODY Statement END_BODY .

    $default  reduce using rule 6 (Function)


State 63

   14 Statement: Var $@4 . ASSIGN Expression SEMICOLON $@5 Statement1

    ASSIGN  shift, and go to state 86


State 64

   17 Statement: Var_arr $@6 . ASSIGN Expression SEMICOLON $@7 Statement1

    ASSIGN  shift, and go to state 87


State 65

   79 Var_arr: IDENT $@25 L_SQUARE_BRACKET . Expression $@26 R_SQUARE_BRACKET

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 88
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 66

   18 Statement: IF Bool_Exp THEN . Statement Else_statement ENDIF SEMICOLON Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 89
    Var        go to state 40
    Var_arr    go to state 41


State 67

   41 Bool_Exp: Not Expression . Comp Expression

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    $default  reduce using rule 50 (Comp)

    Comp  go to state 96


State 68

   19 Statement: WHILE Bool_Exp BEGINLOOP . Statement ENDLOOP SEMICOLON Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 97
    Var        go to state 40
    Var_arr    go to state 41


State 69

   20 Statement: DO BEGINLOOP Statement . ENDLOOP WHILE Bool_Exp SEMICOLON Statement1

    ENDLOOP  shift, and go to state 98


State 70

   32 Statement: CONTINUE SEMICOLON $@14 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 100
    Var         go to state 40
    Var_arr     go to state 41


State 71

   34 Statement: BREAK SEMICOLON $@15 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 101
    Var         go to state 40
    Var_arr     go to state 41


State 72

   23 Statement: READ Var $@8 . SEMICOLON $@9 Statement1

    SEMICOLON  shift, and go to state 102


State 73

   28 Statement: READ Var_arr SEMICOLON . $@12 Statement1

    $default  reduce using rule 27 ($@12)

    $@12  go to state 103


State 74

   26 Statement: WRITE Var $@10 . SEMICOLON $@11 Statement1

    SEMICOLON  shift, and go to state 104


State 75

   30 Statement: WRITE Var_arr SEMICOLON . $@13 Statement1

    $default  reduce using rule 29 ($@13)

    $@13  go to state 105


State 76

   71 Term: IDENT L_PAREN . Term_Exp R_PAREN

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    $default  reduce using rule 75 (Term_Exp)

    Expression  go to state 106
    Multi_Exp   go to state 58
    Term        go to state 59
    Term_Exp    go to state 107
    Var         go to state 60
    Var_arr     go to state 61


State 77

   70 Term: L_PAREN $@22 . Expression $@23 R_PAREN

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 108
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 78

   36 Statement: RETURN Expression SEMICOLON . $@16 Statement1

    $default  reduce using rule 35 ($@16)

    $@16  go to state 109


State 79

   55 Add_Op: MINUS . $@18 Expression

    $default  reduce using rule 54 ($@18)

    $@18  go to state 110


State 80

   53 Add_Op: ADD . $@17 Expression

    $default  reduce using rule 52 ($@17)

    $@17  go to state 111


State 81

   51 Expression: Multi_Exp Add_Op .

    $default  reduce using rule 51 (Expression)


State 82

   59 Mult_Op: MULT . $@19 Multi_Exp

    $default  reduce using rule 58 ($@19)

    $@19  go to state 112


State 83

   61 Mult_Op: DIV . $@20 Multi_Exp

    $default  reduce using rule 60 ($@20)

    $@20  go to state 113


State 84

   63 Mult_Op: MOD . $@21 Multi_Exp

    $default  reduce using rule 62 ($@21)

    $@21  go to state 114


State 85

   57 Multi_Exp: Term Mult_Op .

    $default  reduce using rule 57 (Multi_Exp)


State 86

   14 Statement: Var $@4 ASSIGN . Expression SEMICOLON $@5 Statement1

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 115
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 87

   17 Statement: Var_arr $@6 ASSIGN . Expression SEMICOLON $@7 Statement1

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 116
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 88

   79 Var_arr: IDENT $@25 L_SQUARE_BRACKET Expression . $@26 R_SQUARE_BRACKET

    $default  reduce using rule 78 ($@26)

    $@26  go to state 117


State 89

   18 Statement: IF Bool_Exp THEN Statement . Else_statement ENDIF SEMICOLON Statement1

    ELSE  shift, and go to state 118

    $default  reduce using rule 40 (Else_statement)

    Else_statement  go to state 119


State 90

   44 Comp: EQ .

    $default  reduce using rule 44 (Comp)


State 91

   45 Comp: NEQ .

    $default  reduce using rule 45 (Comp)


State 92

   46 Comp: LT .

    $default  reduce using rule 46 (Comp)


State 93

   47 Comp: GT .

    $default  reduce using rule 47 (Comp)


State 94

   48 Comp: LTE .

    $default  reduce using rule 48 (Comp)


State 95

   49 Comp: GTE .

    $default  reduce using rule 49 (Comp)


State 96

   41 Bool_Exp: Not Expression Comp . Expression

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 120
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 97

   19 Statement: WHILE Bool_Exp BEGINLOOP Statement . ENDLOOP SEMICOLON Statement1

    ENDLOOP  shift, and go to state 121


State 98

   20 Statement: DO BEGINLOOP Statement ENDLOOP . WHILE Bool_Exp SEMICOLON Statement1

    WHILE  shift, and go to state 122


State 99

   37 Statement1: Statement .

    $default  reduce using rule 37 (Statement1)


State 100

   32 Statement: CONTINUE SEMICOLON $@14 Statement1 .

    $default  reduce using rule 32 (Statement)


State 101

   34 Statement: BREAK SEMICOLON $@15 Statement1 .

    $default  reduce using rule 34 (Statement)


State 102

   23 Statement: READ Var $@8 SEMICOLON . $@9 Statement1

    $default  reduce using rule 22 ($@9)

    $@9  go to state 123


State 103

   28 Statement: READ Var_arr SEMICOLON $@12 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 124
    Var         go to state 40
    Var_arr     go to state 41


State 104

   26 Statement: WRITE Var $@10 SEMICOLON . $@11 Statement1

    $default  reduce using rule 25 ($@11)

    $@11  go to state 125


State 105

   30 Statement: WRITE Var_arr SEMICOLON $@13 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 126
    Var         go to state 40
    Var_arr     go to state 41


State 106

   72 Term_Exp: Expression .
   74         | Expression . COMMA $@24 Term_Exp

    COMMA  shift, and go to state 127

    $default  reduce using rule 72 (Term_Exp)


State 107

   71 Term: IDENT L_PAREN Term_Exp . R_PAREN

    R_PAREN  shift, and go to state 128


State 108

   70 Term: L_PAREN $@22 Expression . $@23 R_PAREN

    $default  reduce using rule 69 ($@23)

    $@23  go to state 129


State 109

   36 Statement: RETURN Expression SEMICOLON $@16 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 130
    Var         go to state 40
    Var_arr     go to state 41


State 110

   55 Add_Op: MINUS $@18 . Expression

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 131
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 111

   53 Add_Op: ADD $@17 . Expression

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Expression  go to state 132
    Multi_Exp   go to state 58
    Term        go to state 59
    Var         go to state 60
    Var_arr     go to state 61


State 112

   59 Mult_Op: MULT $@19 . Multi_Exp

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Multi_Exp  go to state 133
    Term       go to state 59
    Var        go to state 60
    Var_arr    go to state 61


State 113

   61 Mult_Op: DIV $@20 . Multi_Exp

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Multi_Exp  go to state 134
    Term       go to state 59
    Var        go to state 60
    Var_arr    go to state 61


State 114

   63 Mult_Op: MOD $@21 . Multi_Exp

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    Multi_Exp  go to state 135
    Term       go to state 59
    Var        go to state 60
    Var_arr    go to state 61


State 115

   14 Statement: Var $@4 ASSIGN Expression . SEMICOLON $@5 Statement1

    SEMICOLON  shift, and go to state 136


State 116

   17 Statement: Var_arr $@6 ASSIGN Expression . SEMICOLON $@7 Statement1

    SEMICOLON  shift, and go to state 137


State 117

   79 Var_arr: IDENT $@25 L_SQUARE_BRACKET Expression $@26 . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 138


State 118

   39 Else_statement: ELSE . Statement

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    Statement  go to state 139
    Var        go to state 40
    Var_arr    go to state 41


State 119

   18 Statement: IF Bool_Exp THEN Statement Else_statement . ENDIF SEMICOLON Statement1

    ENDIF  shift, and go to state 140


State 120

   41 Bool_Exp: Not Expression Comp Expression .

    $default  reduce using rule 41 (Bool_Exp)


State 121

   19 Statement: WHILE Bool_Exp BEGINLOOP Statement ENDLOOP . SEMICOLON Statement1

    SEMICOLON  shift, and go to state 141


State 122

   20 Statement: DO BEGINLOOP Statement ENDLOOP WHILE . Bool_Exp SEMICOLON Statement1

    NOT  shift, and go to state 43

    $default  reduce using rule 43 (Not)

    Bool_Exp  go to state 142
    Not       go to state 45


State 123

   23 Statement: READ Var $@8 SEMICOLON $@9 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 143
    Var         go to state 40
    Var_arr     go to state 41


State 124

   28 Statement: READ Var_arr SEMICOLON $@12 Statement1 .

    $default  reduce using rule 28 (Statement)


State 125

   26 Statement: WRITE Var $@10 SEMICOLON $@11 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 144
    Var         go to state 40
    Var_arr     go to state 41


State 126

   30 Statement: WRITE Var_arr SEMICOLON $@13 Statement1 .

    $default  reduce using rule 30 (Statement)


State 127

   74 Term_Exp: Expression COMMA . $@24 Term_Exp

    $default  reduce using rule 73 ($@24)

    $@24  go to state 145


State 128

   71 Term: IDENT L_PAREN Term_Exp R_PAREN .

    $default  reduce using rule 71 (Term)


State 129

   70 Term: L_PAREN $@22 Expression $@23 . R_PAREN

    R_PAREN  shift, and go to state 146


State 130

   36 Statement: RETURN Expression SEMICOLON $@16 Statement1 .

    $default  reduce using rule 36 (Statement)


State 131

   55 Add_Op: MINUS $@18 Expression .

    $default  reduce using rule 55 (Add_Op)


State 132

   53 Add_Op: ADD $@17 Expression .

    $default  reduce using rule 53 (Add_Op)


State 133

   59 Mult_Op: MULT $@19 Multi_Exp .

    $default  reduce using rule 59 (Mult_Op)


State 134

   61 Mult_Op: DIV $@20 Multi_Exp .

    $default  reduce using rule 61 (Mult_Op)


State 135

   63 Mult_Op: MOD $@21 Multi_Exp .

    $default  reduce using rule 63 (Mult_Op)


State 136

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON . $@5 Statement1

    $default  reduce using rule 13 ($@5)

    $@5  go to state 147


State 137

   17 Statement: Var_arr $@6 ASSIGN Expression SEMICOLON . $@7 Statement1

    $default  reduce using rule 16 ($@7)

    $@7  go to state 148


State 138

   79 Var_arr: IDENT $@25 L_SQUARE_BRACKET Expression $@26 R_SQUARE_BRACKET .

    $default  reduce using rule 79 (Var_arr)


State 139

   39 Else_statement: ELSE Statement .

    $default  reduce using rule 39 (Else_statement)


State 140

   18 Statement: IF Bool_Exp THEN Statement Else_statement ENDIF . SEMICOLON Statement1

    SEMICOLON  shift, and go to state 149


State 141

   19 Statement: WHILE Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 150
    Var         go to state 40
    Var_arr     go to state 41


State 142

   20 Statement: DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp . SEMICOLON Statement1

    SEMICOLON  shift, and go to state 151


State 143

   23 Statement: READ Var $@8 SEMICOLON $@9 Statement1 .

    $default  reduce using rule 23 (Statement)


State 144

   26 Statement: WRITE Var $@10 SEMICOLON $@11 Statement1 .

    $default  reduce using rule 26 (Statement)


State 145

   74 Term_Exp: Expression COMMA $@24 . Term_Exp

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 56

    $default  reduce using rule 75 (Term_Exp)

    Expression  go to state 106
    Multi_Exp   go to state 58
    Term        go to state 59
    Term_Exp    go to state 152
    Var         go to state 60
    Var_arr     go to state 61


State 146

   70 Term: L_PAREN $@22 Expression $@23 R_PAREN .

    $default  reduce using rule 70 (Term)


State 147

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON $@5 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 153
    Var         go to state 40
    Var_arr     go to state 41


State 148

   17 Statement: Var_arr $@6 ASSIGN Expression SEMICOLON $@7 . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 154
    Var         go to state 40
    Var_arr     go to state 41


State 149

   18 Statement: IF Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 155
    Var         go to state 40
    Var_arr     go to state 41


State 150

   19 Statement: WHILE Bool_Exp BEGINLOOP Statement ENDLOOP SEMICOLON Statement1 .

    $default  reduce using rule 19 (Statement)


State 151

   20 Statement: DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON . Statement1

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 38 (Statement1)

    Statement   go to state 99
    Statement1  go to state 156
    Var         go to state 40
    Var_arr     go to state 41


State 152

   74 Term_Exp: Expression COMMA $@24 Term_Exp .

    $default  reduce using rule 74 (Term_Exp)


State 153

   14 Statement: Var $@4 ASSIGN Expression SEMICOLON $@5 Statement1 .

    $default  reduce using rule 14 (Statement)


State 154

   17 Statement: Var_arr $@6 ASSIGN Expression SEMICOLON $@7 Statement1 .

    $default  reduce using rule 17 (Statement)


State 155

   18 Statement: IF Bool_Exp THEN Statement Else_statement ENDIF SEMICOLON Statement1 .

    $default  reduce using rule 18 (Statement)


State 156

   20 Statement: DO BEGINLOOP Statement ENDLOOP WHILE Bool_Exp SEMICOLON Statement1 .

    $default  reduce using rule 20 (Statement)
